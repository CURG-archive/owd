/* Auto-generated by genmsg_cpp for file /home/armuser/ros/rosbuild_src/owd/srv/StepJoint.srv */
#ifndef OWD_SERVICE_STEPJOINT_H
#define OWD_SERVICE_STEPJOINT_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace owd
{
template <class ContainerAllocator>
struct StepJointRequest_ {
  typedef StepJointRequest_<ContainerAllocator> Type;

  StepJointRequest_()
  : joint(0)
  , radians(0.0)
  {
  }

  StepJointRequest_(const ContainerAllocator& _alloc)
  : joint(0)
  , radians(0.0)
  {
  }

  typedef uint8_t _joint_type;
  uint8_t joint;

  typedef double _radians_type;
  double radians;


  typedef boost::shared_ptr< ::owd::StepJointRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::owd::StepJointRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct StepJointRequest
typedef  ::owd::StepJointRequest_<std::allocator<void> > StepJointRequest;

typedef boost::shared_ptr< ::owd::StepJointRequest> StepJointRequestPtr;
typedef boost::shared_ptr< ::owd::StepJointRequest const> StepJointRequestConstPtr;



template <class ContainerAllocator>
struct StepJointResponse_ {
  typedef StepJointResponse_<ContainerAllocator> Type;

  StepJointResponse_()
  {
  }

  StepJointResponse_(const ContainerAllocator& _alloc)
  {
  }


  typedef boost::shared_ptr< ::owd::StepJointResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::owd::StepJointResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct StepJointResponse
typedef  ::owd::StepJointResponse_<std::allocator<void> > StepJointResponse;

typedef boost::shared_ptr< ::owd::StepJointResponse> StepJointResponsePtr;
typedef boost::shared_ptr< ::owd::StepJointResponse const> StepJointResponseConstPtr;


struct StepJoint
{

typedef StepJointRequest Request;
typedef StepJointResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct StepJoint
} // namespace owd

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::owd::StepJointRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::owd::StepJointRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::owd::StepJointRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "e76fd844c151f2b85b89aba56e105bdc";
  }

  static const char* value(const  ::owd::StepJointRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xe76fd844c151f2b8ULL;
  static const uint64_t static_value2 = 0x5b89aba56e105bdcULL;
};

template<class ContainerAllocator>
struct DataType< ::owd::StepJointRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "owd/StepJointRequest";
  }

  static const char* value(const  ::owd::StepJointRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::owd::StepJointRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "uint8 joint\n\
float64 radians\n\
\n\
";
  }

  static const char* value(const  ::owd::StepJointRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::owd::StepJointRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::owd::StepJointResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::owd::StepJointResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::owd::StepJointResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const  ::owd::StepJointResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xd41d8cd98f00b204ULL;
  static const uint64_t static_value2 = 0xe9800998ecf8427eULL;
};

template<class ContainerAllocator>
struct DataType< ::owd::StepJointResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "owd/StepJointResponse";
  }

  static const char* value(const  ::owd::StepJointResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::owd::StepJointResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
";
  }

  static const char* value(const  ::owd::StepJointResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::owd::StepJointResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::owd::StepJointRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.joint);
    stream.next(m.radians);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct StepJointRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::owd::StepJointResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct StepJointResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<owd::StepJoint> {
  static const char* value() 
  {
    return "e76fd844c151f2b85b89aba56e105bdc";
  }

  static const char* value(const owd::StepJoint&) { return value(); } 
};

template<>
struct DataType<owd::StepJoint> {
  static const char* value() 
  {
    return "owd/StepJoint";
  }

  static const char* value(const owd::StepJoint&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<owd::StepJointRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "e76fd844c151f2b85b89aba56e105bdc";
  }

  static const char* value(const owd::StepJointRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<owd::StepJointRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "owd/StepJoint";
  }

  static const char* value(const owd::StepJointRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<owd::StepJointResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "e76fd844c151f2b85b89aba56e105bdc";
  }

  static const char* value(const owd::StepJointResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<owd::StepJointResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "owd/StepJoint";
  }

  static const char* value(const owd::StepJointResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // OWD_SERVICE_STEPJOINT_H

